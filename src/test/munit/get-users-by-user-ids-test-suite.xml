<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:gets/get-users-by-user-ids.xml"/>
    </spring:beans>
    <munit:test name="get-users-by-user-ids-test-suite-getUsersByUserIdsTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock Salesforce">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="Salesforce"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('examples/users.json').asString()]" mimeType="application/json"/>
        </mock:when>
        <set-payload value="[
{&quot;ownerid&quot;: &quot;0051A00000ArN7kQAF&quot;},
{&quot;ownerid&quot;: &quot;0051A00000BztU2QAJ&quot;},
{&quot;ownerid&quot;: &quot;005C0000008PV6DIAW&quot;},
{&quot;ownerid&quot;: &quot;0051A000008d99WQAQ&quot;}

]" mimeType="application/json" doc:name="Set Payload"/>
        <munit:set payload="#[getResource('examples/param-ids.json').asString()]" mimeType="application/json" doc:name="Copy_of_set payload"/>
        <flow-ref name="getUsersByUserIds" doc:name="getUsersByUserIds"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <munit:assert-on-equals message="failed on return size" expectedValue="#[4]" actualValue="#[payload.size()]" doc:name="Response size"/>
        <munit:assert-on-equals message="failed on first user" expectedValue="#[&quot;0051A00000ArN7kQAF&quot;]" actualValue="#[payload[0].Id]" doc:name="first user"/>
        <munit:assert-on-equals message="failed on second user" expectedValue="#[&quot;0051A00000BztU2QAJ&quot;]" actualValue="#[payload[1].Id]" doc:name="second user"/>
        <munit:assert-on-equals message="failed on third user" expectedValue="#[&quot;005C0000008PV6DIAW&quot;]" actualValue="#[payload[2].Id]" doc:name="third user"/>
    </munit:test>
</mule>
